<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC 	"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="main.mybatis">
	<cache />
	<select id="likeid" resultType="int">
		select
		nvl(max(likely_bookmark_id),0)+1 likely_bookmark_id from
		likely_bookmark
	</select>
	<select id="profileImg" parameterType="String" resultType="String">
	select profileimg from r_member where id=#{id}
	</select>
	<select id="hashtaglist" parameterType="int" resultType="String">
		select
		(select hashtag_content from hashtag y where
		y.hashtag_id=h.hashtag_id) hashtaglist from hash_feed h where
		feed_id=#{feed_id}
	</select>
	<select id="editorfoodtwo" parameterType="int" resultType="String">
		select
		(select q.name from food q where q.food_id=t.food_id) food_id from
		feed_food t where t.feed_id=#{feed_id}
	</select>
	<select id="feedrepletwo" parameterType="int" resultType="reple">
		select *
		from reple where feed_id=#{feed_id} order by reple_id desc
	</select>

	<update id="point" parameterType="hashmap">
		update r_member set
		point=point+1 where
		id=(select id from feed where
		feed_id=#{feed_id})
	</update>
		<select id="getfeed" resultType="feed" parameterType="hashmap">
		select
		feed_id,id,like_num,reg_date,recipe_name,
		(select nvl(count(*),0) from
		likely_bookmark l
		where l.feed_id=f.feed_id and l.type='L' and
		l.id=#{id})
		likestate,
		(select nvl(count(*),0)from likely_bookmark l
		where l.feed_id=f.feed_id and l.type='B'and l.id=#{id})
		bookmarkstate,(select grade from r_member where id=f.id) feed_grade
		from feed f where f.feed_id=#{feed_id}
		order by reg_date
		desc
	</select>
	<select id="getfeednol" parameterType="int" resultType="feed">
		select *
		from
		feed where feed_id=#{feed_id} order
		by
		reg_date desc
	</select>
	<!-- <select id="getfeeds" resultType="feed"> select * from feed order by 
		reg_date desc </select> -->
	<select id="getImg_name" parameterType="int" resultType="String">
		select
		image_name from img where feed_id=#{feed_id} order by img_id
	</select>
	<select id="getContent" parameterType="int" resultType="String">
		select
		content from img where feed_id=#{feed_id} order by img_id
	</select>

	<select id="getLikeList" parameterType="String" resultType="likely_bookmark">
		select * from likely_bookmark where id=#{id}
	</select>

	<select id="getfeeds" resultType="feed" parameterType="String">
		select
		feed_id,id,like_num,reg_date,recipe_name,
		(select nvl(count(*),0) from
		likely_bookmark l
		where l.feed_id=f.feed_id and l.type='L' and
		l.id=#{id})
		likestate,
		(select nvl(count(*),0)from likely_bookmark l
		where l.feed_id=f.feed_id and l.type='B'and l.id=#{id})
		bookmarkstate,(select grade from r_member where id=f.id) feed_grade
		from feed f
		order by reg_date desc
	</select>


<insert id="like" parameterType="hashmap">
		INSERT INTO likely_bookmark
		(likely_bookmark_id, id,feed_id, type)
		VALUES(#{likely_bookmark_id},#{id},#{feed_id},#{type})
	</insert>

	<delete id="unlike" parameterType="hashmap">
		delete from likely_bookmark
		where id=#{id} and feed_id=#{feed_id} and
		type=#{type}
	</delete>

	<select id="getfeedsNologin" resultType="feed">
		select feed_id,id,like_num,reg_date,recipe_name,(select grade from r_member where id=f.id) feed_grade from
		feed f order
		by
		reg_date desc
	</select>
	<select id="getUserSearchList" parameterType="hashmap"
		resultType="R_member">
		select * from r_member where id like
		'%${autocompleteText}%'
	</select>

	<select id="getFeedSearchList" parameterType="hashmap"
		resultType="feed">
		select f.feed_id, f.id, f.like_num,f.reg_date,
		f.recipe_name from feed f, hash_feed hf
		where f.feed_id = hf.feed_id
		and hf.hashtag_id = (select hashtag_id from hashtag where
		hashtag_content
		= #{autocompleteText}) order by f.reg_date desc
	</select>

	<select id="getFoodSearchList" parameterType="hashmap"
		resultType="food">
		select * from food where name like '%${autocompleteText2}%'
	</select>

	<select id="getUserSearchListWithFollow" parameterType="hashmap"
		resultType="R_member">
		select id, profileImg, info,
		(select count(*) from r_member
		r, follow f where r.id = #{id} and other_id =
		rm.id) follow_status
		from
		r_member rm where id like '%${autocompleteText}%'
	</select>

	<select id="feedreple" parameterType="hashmap" resultType="reple">
		select * from reple where feed_id=#{feed_id} order by reple_id desc
	</select>

	<select id="getTodayRecomendFeed" resultType="feed">
	<![CDATA[
		select * from
		(select * from feed where to_char( trunc(reg_date), 'YYYYMMDD' ) =
		to_char( trunc(sysdate-1), 'YYYYMMDD' ) order by like_num desc) where
		rownum <= 3
	]]>
	</select>

	<select id="getHashtagCnt" resultType="hashtag">
		select (select
		hashtag_content from hashtag h where h.hashtag_id = hf.hashtag_id)
		hashtag_content ,
		count(*) cnt from hash_feed hf where hf.feed_id in
		(select f.feed_id from
		r_member r, feed f where r.id = f.id and r.sex =
		'F') group by
		hashtag_id order by cnt desc
	</select>

	<select id="getHashtagCnt2" resultType="hashtag">
		select (select
		hashtag_content from hashtag h where h.hashtag_id = hf.hashtag_id)
		hashtag_content ,
		count(*) cnt from hash_feed hf where hf.feed_id in
		(select f.feed_id from
		r_member r, feed f where r.id = f.id and r.sex =
		'M') group by
		hashtag_id order by cnt desc
	</select>
	<select id="getEditorFeed" resultType="feed">
		select f.feed_id, f.id,
		f.like_num, f.reg_date, f.recipe_name,r.grade feed_grade from feed f,
		r_member r
		where f.id = r.id and r.grade = 'editor' order by f.reg_date
		desc
	</select>

	<select id="editorfood" parameterType="hashmap" resultType="String">
		select (select q.name from food q where q.food_id=t.food_id) food_id
		from feed_food t where t.feed_id=#{feed_id}
	</select>


	<select id="selectUserIdDb" resultType="String">
		select id from r_member
	</select>

	<select id="selectHashDb" resultType="String">
		select hashtag_content from
		hashtag
	</select>

	<select id="selectFoodNameDb" resultType="String">
		select name from food
	</select>

	<select id="getHashtagKeyCount" parameterType="hashmap"
		resultType="int">
		select count(*) cnt from hash_feed hf, hashtag h where
		hf.hashtag_id = h.hashtag_id and h.hashtag_content = #{please}
	</select>
	
	<select id="getRestaurant_recommand_id" resultType="int">
		select nvl(max(restaurant_recommand_id),0) from restaurant_recommand
	</select>
	
	<insert id="restaurant_recommand"  parameterType="hashmap">
		insert into restaurant_recommand
		(restaurant_recommand_id, subject, content,reg_date, id)
		values
		(#{restaurant_recommand_id}, #{restaurant_recommand.subject},
		#{restaurant_recommand.content}, sysdate, #{restaurant_recommand.id})
	</insert>
	
	<select id="getArticleCount"  resultType="int">
		select count(*) from restaurant_recommand 	
	</select>
	
	 <select id="getArticles"  parameterType="hashmap" 
	 resultType="restaurant_recommand">
		select rr.*, (select avg(star) from star_content where restaurant_recommand_id=rr.restaurant_recommand_id )avgstar from 
     (select rownum rnum ,a.* 
      from (select restaurant_recommand_id,subject,content,reg_date,id  from restaurant_recommand 
      where id=#{editorid} 
      order by reg_date desc) a ) rr 
      where rnum  between #{start} and #{end}
</select>

	<select id="getRestaurant_recommand"  parameterType="hashmap"   resultType="restaurant_recommand">
		select * from restaurant_recommand 	where restaurant_recommand_id = #{num}
	</select>
	
	<select id="getEditorList"  resultType="R_member">
		select *
		from
		r_member where grade = 'editor'
	</select>
	
	<select id="getStarcontent_id"  resultType="int">
		select count(*) from star_content 	
	</select>
	
	<insert id="starcontent"  parameterType="hashmap">
		insert into star_content
		(star_content_id, star, starcontent,id,reg_date, restaurant_recommand_id)
		values
		(#{star_content_id}, #{starcontent.star},
		#{starcontent.starcontent},#{starcontent.id}, sysdate, #{starcontent.restaurant_recommand_id})
	</insert>
	
	<select id="getStarcontentList" parameterType="hashmap" resultType="star_content">
		select * from star_content where restaurant_recommand_id=#{num} order by reg_date desc
	</select>
</mapper>