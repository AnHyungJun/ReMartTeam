<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC    "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="shopping.mybatis">
   <cache />
   
   <select id="getFoodCount" parameterType="hashmap" resultType="int">
      select count(*) from food
      <if test="category != null">
         WHERE category_id = #{category_id}
      </if>
   </select>
   
   <select id="getFoods" parameterType="hashmap" resultType="food">
      select * from (select rownum rnum, a.* from(
      select food_id, name, price, qty from food where category_id = #{category_id})
      a) where rnum between #{start} and #{end}
   </select>
   
   <insert id="insertBasket" parameterType="hashmap">
		insert into basket (basket_id, id, food_id, food_num) 
		 values(#{basket_id}, #{id}, #{food_id}, #{food_num})
   </insert>
   
   <select id="insertBasket_new" resultType="int">
   		select nvl(max(basket_id),0) from basket
   </select>
   
    <select id="getBasketCount" parameterType="hashmap" resultType="int">
      	select count(*) from basket
      <if test="id != null">
        WHERE id = #{id}
      </if>
   </select>
   
   <select id="getBaskets" parameterType="hashmap" resultType="basket">
		select basket_id, id, food_num, food_id, (select name from food f where f.food_id = b.food_id) bname, 
		(select price from food f where f.food_id = b.food_id) bprice from basket b where id = #{id}
   </select>
   
   <select id="deleteBasket"   parameterType="hashmap" >
	 	delete from basket where basket_id = #{basket_id}
    </select>
   
   <update id="updateFoodNum" parameterType="hashmap">
   		update basket set food_num=#{food_num} where basket_id=#{basket_id}
   </update>
   
   <insert id="insertPayment" parameterType="hashmap">
		insert into food_payment (payment_id, id, order_date, pay_method, phone, name, all_price, zip1, zip2, address1, address2, pro_name, order_state ) 
		 values(#{payment_id}, #{id}, sysdate, #{pay_method}, #{phone}, #{name}, #{all_price}, #{zip1}, #{zip2}, #{address1}, #{address2}, #{pro_name}, #{order_state})
   </insert>
   
   <select id="insertPayment_new" resultType="int">
   		select nvl(max(payment_id),0) from food_payment
   </select>
   
   <select id="deletePaidBasket"   parameterType="hashmap" >
	 	delete from basket where id = #{id}
    </select>
   
   <select id="selectPaymentid" resultType="int">
   		select nvl(max(payment_id),0) from food_payment
   </select>
   
   <update id="updateHistory" parameterType="hashmap">
   		update food_payment set order_state=#{order_state} where payment_id=#{payment_id}
   </update>
   
   <select id="getPayment" parameterType="hashmap" resultType="food_payment">
		select payment_id, order_date, order_state, all_price, pro_name from food_payment b where id = #{id}
   </select>
   
   <select id="insertFood_num_new" resultType="int">
		select nvl(max(food_num_id),0) from food_num
	</select>
	
	<insert id="insertFood_num"  parameterType="hashmap">
		insert into food_num(food_num_id, food_id, qty, div, order_id)  
		values (#{food_num_id}, #{food_num.food_id},#{food_num.qty}, #{food_num.div},#{food_num.order_id})
	</insert>
   
   <select id="getFoodNum" resultType="food_num">
		select food_id, qty, order_id, (select a.name from food a where a.food_id = b.food_id) food_name from food_num b
	</select>
  
   <update id="updateFoodQty" parameterType="hashmap" >
   		update food set qty = #{qty}-1 where food_id = #{food_id}
   </update>
 

   
   
   
</mapper>